@using iBlogHub.Areas.Identity.Data
@inject SignInManager<AppUsers> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

    <p>
        <a class="@ManageNavPages.IndexNavClass(ViewContext) text-link" id="profile" asp-page="./Index"><i class="fa fa-user"></i> Profile</a>
        <hr />
        <a class="@ManageNavPages.SocialLinksNavClass(ViewContext) text-link" id="socialLinks" asp-page="./SocialLinks"><i class="fa fa-user"></i> Manage Social Profile</a>
        <hr />
        <a class="@ManageNavPages.BookmarksNavClass(ViewContext) text-link" id="bookmarks" asp-page="./Bookmarks"><i class="fa fa-bookmark"></i> Bookmarks</a>
        <hr />
        <a class="@ManageNavPages.MyStoriesNavClass(ViewContext) text-link" id="bookmarks" asp-page="./MyStories"><i class="fa fa-list"></i> My Published Stories</a>
        <hr />
        <a class="@ManageNavPages.DraftsNavClass(ViewContext) text-link" id="bookmarks" asp-page="./Drafts"><i class="fa fa-list-alt"></i> My Drafts</a>
        <hr />
        <a class="@ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email"><i class="fa fa-inbox"></i> Manage Email</a>
        <hr />
        <a class="@ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword"><i class="fa fa-key"></i> Change Password</a>
        <hr />
        @if (hasExternalLogins)
        {
            <a id="external-login" class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins"><i class="fa fa-password"></i> External logins</a>
            <hr />
        }
        @*<a class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication"> <i class="fa fa-shield-alt"></i> Two-factor authentication</a>
        <hr />*@
        <a class="@ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData"><i class="fa fa-user-alt"></i> Personal data</a>
        <br />
    </p>

