#pragma checksum "I:\Sujay\iBlogHub\iBlogHub\Views\Shared\_Files.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4e4d2dd2a1b46da8a96f67b69e775373c328ab5c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__Files), @"mvc.1.0.view", @"/Views/Shared/_Files.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "I:\Sujay\iBlogHub\iBlogHub\Views\_ViewImports.cshtml"
using iBlogHub;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "I:\Sujay\iBlogHub\iBlogHub\Views\_ViewImports.cshtml"
using iBlogHub.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4e4d2dd2a1b46da8a96f67b69e775373c328ab5c", @"/Views/Shared/_Files.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4703e932db1fbaf4bc13a4abb1db540c49984d8a", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__Files : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("fileupload"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "POST", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4e4d2dd2a1b46da8a96f67b69e775373c328ab5c4109", async() => {
                WriteLiteral(@"
    <div class=""row fileupload-buttonbar"">
        <div class=""col-lg-7"">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class=""btn btn-success fileinput-button"">
                <i class=""glyphicon glyphicon-plus""></i>
                <span>Add files...</span>
                <input type=""file"" name=""files[]"" multiple>
            </span>
            <button type=""submit"" class=""btn btn-primary start"">
                <i class=""glyphicon glyphicon-upload""></i>
                <span>Start upload</span>
            </button>
            <button type=""reset"" class=""btn btn-warning cancel"">
                <i class=""glyphicon glyphicon-ban-circle""></i>
                <span>Cancel upload</span>
            </button>
            <button type=""button"" class=""btn btn-danger delete"">
                <i class=""glyphicon glyphicon-trash""></i>
                <span>Delete</span>
            </button>
            <input type=""checkbo");
                WriteLiteral(@"x"" class=""toggle"">
            <!-- The global file processing state -->
            <span class=""fileupload-process""></span>
        </div>
        <!-- The global progress state -->
        <div class=""col-lg-5 fileupload-progress fade"">
            <!-- The global progress bar -->
            <div class=""progress progress-striped active"" role=""progressbar"" aria-valuemin=""0"" aria-valuemax=""100"">
                <div class=""progress-bar progress-bar-success"" style=""width:0%;""></div>
            </div>
            <!-- The extended global progress state -->
            <div class=""progress-extended"">&nbsp;</div>
        </div>
    </div>
    <!-- The global progress state -->
    <div class=""col-lg-5 fileupload-progress fade"">
        <!-- The global progress bar -->
        <div class=""progress progress-striped active"" role=""progressbar"" aria-valuemin=""0"" aria-valuemax=""100"">
            <div class=""progress-bar progress-bar-success"" style=""width:0%;""></div>
        </div>
        <!-- Th");
                WriteLiteral(@"e extended global progress state -->
        <div class=""progress-extended"">&nbsp;</div>
    </div>

    <!-- The table listing the files available for upload/download -->
    <table role=""presentation"" class=""table table-striped""><tbody class=""files""></tbody></table>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 1 "I:\Sujay\iBlogHub\iBlogHub\Views\Shared\_Files.cshtml"
                                                                       Write(Url.Action("Upload","FileUpload"));

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("data-url", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<br>
<!-- The blueimp Gallery widget -->
<div id=""blueimp-gallery"" class=""blueimp-gallery blueimp-gallery-controls"" data-filter="":even"">
    <div class=""slides""></div>
    <h3 class=""title""></h3>
    <a class=""prev"">‹</a>
    <a class=""next"">›</a>
    <a class=""close"">×</a>
    <a class=""play-pause""></a>
    <ol class=""indicator""></ol>
</div>
<!-- The template to display files available for upload -->
<script id=""template-upload"" type=""text/x-tmpl"">
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class=""template-upload fade"">
        <td>
            <span class=""preview""></span>
        </td>
        <td>
            <p class=""name"">{%=file.name%}</p>
            <strong class=""error text-danger""></strong>
        </td>
        <td>
            <p class=""size"">Processing...</p>
            <div class=""progress progress-striped active"" role=""progressbar"" aria-valuemin=""0"" aria-valuemax=""100"" aria-valuenow=""0""><div class=""progress-bar progress-bar-success"" style=""width");
            WriteLiteral(@":0%;""></div></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
            <button class=""btn btn-primary start"" disabled>
                <i class=""glyphicon glyphicon-upload""></i>
                <span>Start</span>
            </button>
            {% } %}
            {% if (!i) { %}
            <button class=""btn btn-warning cancel"">
                <i class=""glyphicon glyphicon-ban-circle""></i>
                <span>Cancel</span>
            </button>
            {% } %}
        </td>
    </tr>
    {% } %}
</script>
<!-- The template to display files available for download -->
<script id=""template-download"" type=""text/x-tmpl"">
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class=""template-download fade"">
        <td>
            <span class=""preview"">
                {% if (file.thumbnailUrl) { %}
                <a href=""{%=file.url%}"" title=""{%=file.name%}"" download=""{%=file.name%}"" data-gallery><img src=""{%=file.thumbnailUrl%}");
            WriteLiteral(@"""></a>
                {% } %}
            </span>
        </td>
        <td>
            <p class=""name"">
                {% if (file.url) { %}
                <a href=""{%=file.url%}"" title=""{%=file.name%}"" download=""{%=file.name%}"" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                {% } else { %}
                <span>{%=file.name%}</span>
                {% } %}
            </p>
            {% if (file.error) { %}
            <div><span class=""label label-danger"">Error</span> {%=file.error%}</div>
            {% } %}
        </td>
        <td>
            <span class=""size"">{%=o.formatFileSize(file.size)%}</span>
        </td>
        <td>
            {% if (file.deleteUrl) { %}
            <button class=""btn btn-danger delete"" data-type=""{%=file.deleteType%}"" data-url=""{%=file.deleteUrl%}"" {% if (file.deletewithcredentials) { %} data-xhr-fields='{""withCredentials"":true}' {% } %}>
                <i class=""glyphicon glyphicon-trash""></i>
                <span");
            WriteLiteral(@">Delete</span>
            </button>
            <input type=""checkbox"" name=""delete"" value=""1"" class=""toggle"">
            {% } else { %}
            <button class=""btn btn-warning cancel"">
                <i class=""glyphicon glyphicon-ban-circle""></i>
                <span>Cancel</span>
            </button>
            {% } %}
        </td>
    </tr>
    {% } %}
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public iBlogHub.Models.IPostsService _postsService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public iBlogHub.Helpers.ICurrentUser _cUser { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
