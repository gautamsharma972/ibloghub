@model IEnumerable<iBlogHub.Models.PostsViewModel>
@{
    ViewData["Title"] = ViewBag.Category.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var Featured = _postsService.FeaturedPosts;
    var Categories = _postsService.Categories;
    ViewBag.IncludeAds = true;
    ViewBag.KeyWords = "Collection,Stories,Codes,and,Latest,Articles, ibloghub, blogs, " +
                "blog, posts, categories, " + ViewBag.Category.Title + ", Posts under " + ViewBag.Category.Title;
    ViewBag.MetaDescription = "Recent Stories, Articles and Learning contents in " + ViewBag.Category.Title;
    List<Guid> usedIds = new List<Guid>();
}

@section Seo{

    @if (Model.Count() > 0)
    {
        <meta name="image" content="http://ibloghub.com/Uploads/@Model.Where(a => a.FeaturedImage != null).FirstOrDefault().FeaturedImage" />
        <meta itemprop="image" content="http://ibloghub.com/Uploads/@Model.Where(a => a.FeaturedImage != null).FirstOrDefault().FeaturedImage" />
    }
}

<div class="container">

    <div class="row justify-content-center">

        <div class="col-md-8 main-loop">

            @if (Model.Count() >= 1)
            {
                @foreach (var item in Model.Where(a => !string.IsNullOrEmpty(a.FeaturedImage)).OrderBy(a => a.Id).Take(1))
                {
                    await Html.RenderPartialAsync("_PostSingleFeatured", item);
                    usedIds.Add(item.Id);
                }
                <div class="spanborder"></div>
                await Html.RenderPartialAsync("_MainPostsWidget", Model.Where(a => !usedIds.Contains(a.Id)).Take(16));

            }
            @*@if (Model.Count() > 10)
                {
                    <div class="mt-5">
                        <ul class="pagination">
                                @for (var i = 1; i <= Model.Count(); i++)
                                {
                                    <li class="page-item @(i == Model.Count() ? "active" : "")">
                                        <a asp-controller="Stories" asp-action="Index" asp-route-currentpage="@i" class="page-link">@i</a>
                                    </li>
                                }
                            </ul>*@
            @*@PagedList.Core.PagedListPager(Model, page => Url.Action("Index", new { page = page }),
                            new PagedListRenderOptions
                            {
                                UlElementClasses = new string[] { "pagination" },
                                LiElementClasses = new string[] { "page-item" },
                                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                LinkToPreviousPageFormat = string.Format("« Prev"),
                                LinkToLastPageFormat = string.Format("»"),

                            })

                    </div>
                }  *@

            <div class="clearfix"></div>
            <div class="featured-category spanborder text-right mt-3 pb-3 text-uppercase smaller">
                <a href="@Url.Action("Index", "Stories")">
                    All Stories <i class="fa fa-angle-right"></i>
                </a>

                <div class="clearfix"></div>
            </div>


            <div class="clearfix"></div>

            @{
                await Html.RenderPartialAsync("_CategoryWidget", Categories);

            }
        </div>

        <div class="col-md-4">
            <div class="sticky-top sticky-top-offset">
                <div class="col-sm-12">
                    <div class="col-sm-12">
                        <p>
                            <b class="font-weight-bold h5">@ViewBag.Category.Title</b>
                        </p>
                        <a class="btn btn-outline-success btn-sm btn-default" href="#follow-Category">Follow</a>
                        <div class="mt-3">
                            <p>
                                <small class="text-muted">
                                    Last post on @Model.OrderByDescending(a => a.PostDate).Take(1).FirstOrDefault().PostDate.ToString("dd MMM, yyyy")
                                    by
                                    <a class="text-muted" href="@Url.Action("Index", "Profile", new { username = Model.OrderByDescending(a => a.PostDate).Take(1).FirstOrDefault().Author.UserName })">
                                        @Model.OrderByDescending(a => a.PostDate).Take(1).FirstOrDefault().Author.FirstName
                                    </a>

                                </small>
                            </p>
                        </div>
                        <p>&nbsp;</p>
                    </div>

                    @{
                        await Html.RenderPartialAsync("_featuredPosts", Featured);
                    }
                </div>

                <partial name="_sidebarAds" />
            </div>
        </div>

    </div>
</div>


@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>
    <script src="~/lib/highlight/prism.js"></script>
    <script src="~/js/notify.js"></script>
    <script src="~/js/prettify.js"></script>
    <script type="text/javascript">

        var onBegin = function () {
            $("#loader").fadeIn();
        };
        function Notify(data) {
            $("#loader").fadeOut();

            if (data.error == true) {
                Swal.fire({
                    icon: "success",
                    html: data.msg,
                    showConfirmButton: false,
                    timer: 1500
                })
            }
            else {
                Swal.fire({
                    icon: "success",
                    html: data.msg,
                    showConfirmButton: false,
                    timer: 1500
                })
            }

        }
        function NotifyError(data) {
            $("#loader").fadeOut();
            Swal.fire({
                title: "Error!",
                text: "Some error occurred, please try again later.",
                buttonsStyling: true
            });
        }
    </script>

}
